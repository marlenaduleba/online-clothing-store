version: '3.8'
services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  app:
    build:
      context: .
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - db
      - migrate
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules

  migrate:
    image: postgres:14
    depends_on:
      - db
    entrypoint: >
      bash -c "
      until pg_isready -h db -p 5432 -U ${POSTGRES_USER}; do
        echo 'Waiting for database to be ready...';
        sleep 2;
      done;
      PGPASSWORD=${POSTGRES_PASSWORD} psql -h db -U ${POSTGRES_USER} -f /migrations/00-createDatabase.sql &&
      PGPASSWORD=${POSTGRES_PASSWORD} psql -h db -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /migrations/01-schema.sql &&
      PGPASSWORD=${POSTGRES_PASSWORD} psql -h db -U ${POSTGRES_USER} -d ${POSTGRES_DB} -f /migrations/02-initialData.sql
      "
    volumes:
      - ./database/migrations:/migrations
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
